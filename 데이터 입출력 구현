데이터베이스를 설계하는 방법론인 데이터 모델링은 논리 데이터 모델링과 물리 데이터 모
델링으로 구분됩니다. 논리 데이터 모델링은 새로운 건물을 짓기 위하여 설계도를 작성하는
단계

데이터 모델링: 기업의 정보 구조를 실체(Entity)와 관계(Relation)를 중심으로 명확하고
체계적으로 표현하여 문서화하는 기법

논리 데이터 모델링: 개념 모델로부터 업무 영역의 업무 데이터 및 규칙을 구체적으로
표현한 모델

정규화(Normalization): 이상 현상을 제거하고 중복성을 최소화하면서 정보의 일관성을
보장하기 위해 데이터베이스를 설계해 나가는 과정

논리 데이터 모델링은 데이터 구조에 대한 논리적 정의 단계로 정확한 업무 분석을 통한
자료의 흐름을 분석하여 현재 사용 중인 양식, 문서, 장표를 중심으로 자료 항목을 추출하여
엔터티(Entity)와 속성(Attribute)들의 관계(Relation)를 구조적으로 정의하는 단계입니다.

완쪽의 개념 모델링 결과로 도출된 ER 다이어그램은 매핑룰에 따라 논리 모델링로 변환이
됩니다. 고객, 상품, 계약의 단순 엔터티는 테이블로, 각각이 갖고 있는 속성은 칼럼으로
변환됩니다. 식별자는 기본키로, 관계는 외래키로 변환이 되는 것이 일반적입니다.

논리적 데이터 모델링 시 요구 사항을 충분히 수집하지 않으면 다음 단계의 요구 사항
변경에 따른 많은 비용이 발생하게 됩니다. 모든 이해 당사자들과 의사 소통의 보조
자료로서 E-R 모델을 활용하고 논리적 모델은 H/W나 S/W(특히 DBMS)에 독립적인 특성이
있습니다

정규화는 중복성을 최소화하고 정보의 일관성을 보장하기 위한 개념입니다. 제1정규화는
반복되는 속성이나 Group 속성을 제거하는 것이고 제2정규화는 주 식별자에 완전하게
종속되지 않는 속성을 제거하는 것입니다. 제3정규화는 비 식별자에 종속되는 속성을
제거합니다.


업무 분석 내역 검증을 위해 DFD 또는 Usecase 다이어그램의 설계 문서를 검토합니다.
설계 문서를 통해 업무 처리를 위한 입력 데이터, 출력 데이터가 식별되었는지, 관련
업무와의 연계 데이터가 식별되었는지, 신규 데이터 요구 사항이 식별되었는지 등을 확인
할 수 있습니다.
전통적인 방법론에서 사용하는 DFD를 기준으로 설명하겠습니다. 제시되는 DFD를 확인하면
“초기 치료 계획”이라는 프로세스가 있습니다. 여기에 입력 데이터로는 신규 환자의 경우
“초기환자자료＂라는 데이터가 있으며 여기에 기존 환자의 경우 “환자 상태＂라는 입력
값이 추가 됩니다. 출력 값으로는 “감염 정도＂와 “치료 계획”이 있습니다. 여기에
추가적으로 “환자 상태 기록＂이라는 프로세스의 입력 데이터는 “환자 상태 자료＂이며
출력 값은 “환자 상태＂입니다. 논리적인 저장소는 “환자철“, “치료계획철＂이 필요하며
여기에 각각의 프로세스들이 입력/조회/삭제/갱신을 수행하고 있습니다.

객체지향 방법론의 경우 usecase를 검토합니다. 외부 사용자는 “영업 사원”과 “관리자＂이며
각각의 usecase는 프로세스라 할수 있습니다. 먼저 “고객 정보 조회, 수정＂이라는
프로세스는 “고객 정보＂라는 데이터를 입력/출력 데이터로 사용하고 있습니다. “가망 고객
조회, 수집”이라는 프로세스 역시 “고객 정보＂를 입력 데이터로 사용합니다. “우편번호
검색” 프로세스는 “우편번호＂데이터를 입력 데이터로 사용하고 있습니다. “가망 고객 등록”
프로세스는 “우편번호＂와 “고객 정보” 입력 데이터로 사용하고 있으며 “고객 정보”에
출력을 하고 있습니다. DFD나 usecase 다이어그램을 통해서 실제로 어떤 데이터가
필요한지를 통해 논리 데이터 모델 검증이 가능합니다.




