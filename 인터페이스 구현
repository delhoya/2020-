▶ 060 모듈 간 공통 기능 및 데이터 인터페이스 확인



모듈 간 공통 기능 및 데이터 인터페이스

공통 기능 : 모듈의 기능 중 공통적으로 제공되는 기능

데이터 인터페이스 : 모듈 간 교환되는 데이터가 저장될 파라미터를 의미

- 모듈 간 공통 기능 및 데이터 인터페이스 확인 순서

① 인터페이스 설계서를 통해 모듈별 기능 확인

② 외부 및 내부 모듈을 기반으로 공통적으로 제공되는 기능과 각 데이터의  인터페이스 확인





인터페이스 설계서

시스템 사이의 데이터 교환 및 처리를 위해 교환 데이터 및 관련 업무, 송수신 시스템 등에 대한 내용을 정의한 문서



• 일반적인 인터페이스 설계서

시스템 인터페이스 목록, 각 인터페이스의 상세 데이터 명세, 각 기능의 세부 인터페이스 정보를 정의한 문서

- 시스템 인터페이스 설계서 : 시스템 인터페이스 목록을 만들고 각 인터페이스 목록에 대한 상세 데이터 명세를 정의하는 것

참고 ▶032 시스템 인터페이스 설계서 작성

- 상세 기능별 인터페이스 명세서 : 각 기능의 세부 인터페이스 정보를 정의한 문서



• 정적 동적 모형을 통한 인터페이스 설계서

정적 동적 모형으로 각 시스템의 구성 요소를 표현한 다이어그램을 이용하여 만든 문서





인터페이스 설계서별 모듈 기능 확인

- 외부 모듈 : 

송신 및 전달 부분,

데이터 송신 시스템 부분,

오퍼레이션과 사전 조건,

인터페이스 영역



- 내부 모듈 :

수신 부분,

데이터 수신 시스템 부분,

사후 조건,

나머지 부분 





모듈 간 공통 기능 및 데이터 인터페이스 확인

- 내 외부 모듈 기능을 통해 공통적으로 제공되는 기능 확인

- 내 외부 모듈 기능과 공통 기능을 기반으로 필요한 데이터 인터페이스 항목을 확인





▶ 061 모듈 연계를 위한 인터페이스 기능 식별



모듈 연계

모듈 간 데이터의 교환을 위해 관계를 설정하는 것

- 대표적인 EAI, ESB 방식



• EAI(Enterprise Application Integration)

기업 내 각종 애플리케이션 및 플랫폼 간의 정보 전달, 연계, 통합 등 상호 연등이 가능하게 해주는 솔루션

- 비즈니스 간 통합 및 연계성을 증대시킴

- 효율성 및 각 시스템 간의 확정성 높여 줌

- EAI의 구축 유형 

유형

기능

Point-to-Point

가장 기본적인 통합 방식, 애플리케이션을 1대1로 연결

- 변경 및 재사용 어려움

Hub & Spoke

단일 접점인 허브 시스템을 통해 데이터를 전송하는 중앙 집중형 방식

- 확장 및 유지 보수 용이

- 허브 장애 발생 시 시스템 전체에 영향 줌

Message Bus

(ESB 방식)

애플리케이션 사이에 미들웨를 두어 처리하는 방식

- 확장성이 뛰어나 대용량 처리 가능

Hybrid

Hub & Spoke와 Message Bus의 혼합 방식

- 그룹 내 : Hub & Spoke , 그룹 간 : Message Bus

- 데이터 병목 현상 최소화

- 한 가지 방식으로 EAI 구현 가능



• ESB(Enterprise Service Bus)



애플리케이션 간 연계, 데이터 변환, 웹 서비스 지원 등 표준 기반의 인터페이스를 제공하는 솔루션

- 애플리케이션 보다는 서비스 중심의 통합을 지향

- 애플리케이션과의 결합도를 약하게 유지

- 관리 및 보안 유지 쉽고, 높은 수준의 품질 지원 가능





모듈 간 연계 기능 식별

- 모듈 간 공통 기능 및 데이터 인터페이스를 기반으로 모듈과 연계된 기능을 시나리오 형태로 구체화하여 식별

- 식별된 연계 기능은 인터페이스 기능을 식별하는데 사용됨





모듈 간 인터페이스 기능 식별

- 식별된 모듈 간 관련 기능을 검토해 인터페이스 동작에 필요한 기능 식별

- 외부 모듈과 인터페이스 모듈 간의 동작 기능에 기반해 인터페이스의 기능 식별

- 해당 업무에 대한 시나리오를 통해 내부 모듈과 관련된 인터페이스 기능 식별

- 식별된 인터페이스 기능은 인터페이스 기능 구현을 정의하는데 사용됨





▶ 062 모듈 간 인터페이스 데이터 표준 확인



인터페이스 데이터 표준

모듈 간 인터페이스에 사용되는 데이터의 형식을 표준화 하는 것

- 기존의 데이터 중 공통 영역을 추출하거나 어느 한쪽의 데이터를 변환해 정의

- 확인된 인터페이스 데이터 표준은 인터페이스 기능 구현을 정의하는데 사용됨

- 모듈  간 인터페이스 데이터 표준 확인 순서

① 데이터 인터페이스를 통해 인터페이스 데이터 표준 확인

② 인터페이스 기능을 통해 인터페이스 표준 확인

③ 데이터 인터페이스와 인터페이스 기능을 통해 확인된 인터페이스 표준을 검토하여 최종적인 인터페이스 데이터 표준을 확인





▶ 063 인터페이스 기능 구현 정의 



인터페이스 기능 구현 정의

인터페이스를 실제로 구현하기 위해 인터페이스 기능에 대한 구현 방법을 기능별로 기술한 것

- 인터페이스 기능 구현 정의 순서

① 컴포넌트 명세서 확인

② 인터페이스 명세서 확인

③ 일관된 인터페이스 기능 구현 정의

④ 정의된 인터페이스 기능 구현 정형화





모듈 세부 설계서

모듈의 구성 요소와 세부적인 동작 등을 정의한 설계서

- 대표적으로 컴포넌트 설계서와 인터페이스 명세서가 있음

- 컴포넌트 명세서 : 컴포넌트의 개요 및 내부 클래스의 동작, 인터페이스를 통해 외부와 통신하는 명세 등을 정의

- 인터페이스 명세서 : 컴포넌트 명세서의 항목 중 인터페이스 클래스의 세부 조건 및 기능 등을 정의 





모듈 세부 설계서 확인

각 모듈의 컴포넌트 명세서와 인터페이스 명세서를 기반으로 인터페이스에 필요한 기능 확인





인터페이스 기능 구현 정의

인터페이스의 기능, 인터페이스 데이터 표준, 모듈 세부 설계서를 기반으로 일관성 있고 정형화된 인터페이스 기능 구현에 대해 정의





▶ 064 인터페이스 구현



인터페이스 구현

송수신 시스템 간의 데이터 교환 및 처리를 실현해 주는 작업 

- 대표적으로 데이터 통신을 이용한 방법과 인터페이스 엔티티를 이용한 방법이 있음



데이터 통신을 이용한 인터페이스 구현

애플리케이션 영역에서 인터페이스 형식에 맞춘 데이터 포맷을 인터페이스 대상으로 전송하고 이를 수신 측에서 파싱해 해석하는 방법

- 주로 JSON이나 XML 형식의 데이터 포맷을 사용해 인터페이스 구현



인터페이스 엔티티를 이용한 인터페이스 구현

인터페이스가 필요한 시스템 사이에 별도의 인터페이스 엔티티를 두어 상호 연계하는 방식

